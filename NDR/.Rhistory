colnames_ind <- c(paste(unique(ndr_data_indicators$name), " (" , unique(ndr_data_indicators$unit), ")", sep=""),
paste(unique(ndr_data_indicators$name.1), " (" , unique(ndr_data_indicators$unit.1), ")", sep=""),
paste(unique(ndr_data_indicators$name.2), " (" , unique(ndr_data_indicators$unit.2), ")", sep=""),
paste(unique(ndr_data_indicators$name.3), " (" , unique(ndr_data_indicators$unit.3), ")", sep=""),
paste(unique(ndr_data_indicators$name.4), " (" , unique(ndr_data_indicators$unit.4), ")", sep=""))
colnames(ndr_data_indicators)[c(6,10,14,18,22)] <- colnames_ind
county_indicators <- ndr_data_indicators[,c(1:3,6,10,14,18,22)]
county_df <- county_df %>% left_join(county_indicators, by=c("CountyID","CountyName", "ageGroup"))
antal_patienter <- read.csv2("landsting_alder.csv", stringsAsFactors = FALSE)
colnames(antal_patienter) <- c("CountyName", "n_patienter_2013", "n_patienter_2016", "ageGroup")
county_df$ageGroup <- as.character(county_df$ageGroup)
county_df[county_df$ageGroup=="60-110", "ageGroup"] <- "60+"
#TRUM
county_df$CountyName        <- gsub("^\\s*|\\s*$", "", county_df$CountyName)
antal_patienter$CountyName  <- gsub("^\\s*|\\s*$", "", antal_patienter$CountyName)
county_df <- county_df %>% left_join(antal_patienter, by=c("CountyName", "ageGroup")) %>% select(-AntalPatienter)
county_df <- county_df %>% mutate("patientTillväxt (%)"=(n_patienter_2016/n_patienter_2013-1)*100)
list.files()
landst_codebook <- read.csv("landsting_codebook.csv")
View(landst_codebook)
write.csv2(county_df, "county_df.csv", stringsAsFactors="FALSE")
write.csv2(county_df, "county_df.csv", stringsAsFactors=FALSE)
write.csv2(county_df, "county_df.csv", stringsAsFactors=FALSE)
landst_codebook <- read.csv("landsting_code.csv", stringsAsFactors = FALSE)
landst_codebook <- read.csv("landsting_codebook.csv", stringsAsFactors = FALSE)
View(landst_codebook)
landst_codebook <- read.csv2("landsting_codebook.csv", stringsAsFactors = FALSE)
View(landst_codebook)
county_df <- county_df %>% left_join(landst_codebook, by="CountyName")
View(county_df)
head(landst_codebook)
landst_codebook$CountyName        <- gsub("^\\s*|\\s*$", "", landst_codebook$CountyName)
county_df <- county_df %>% left_join(landst_codebook, by="CountyName")
View(county_df)
library(jsonlite)
library(plyr)
library(dplyr)
Sys.setlocale(category = "LC_ALL", locale = "sv_SE.UTF-8")
setwd("/Users/mammarrahmani/Projects/diabetesforbund/NDR")
enheter         <- fromJSON("enhet.JSON")
landsting       <- fromJSON("landsting.JSON")
indikator       <- fromJSON("indikator.JSON")
indikator[nrow(indikator),c("id", "name")] <- c(2052, "Insulinbehandlade med CGM")
indikator$id <- as.integer(indikator$id)
#V?lj vilka indikatorer som ska exporteras
indikator_selected <- indikator %>% filter(id %in% c(201, 221, 224, 101, 2052))
url_list          <- indikator_selected %>% select(id, name)
generate_url_list <- function(a1, a2) {
url_list$start_age    <- a1
url_list$end_age      <- a2
url_list$url          <- paste("https://www.ndr.nu/IFrameKnappen/api/County/Indicator?includeNDR=true",
"&indicator=", url_list$id,
"&diabetesType=1",
"&sex=0",
"&careunitType=2",
"&fromYear=2016&fromQuartal=0&toYear=2016&toQuartal=0",
"&fromAge=", url_list$start_age,
"&toAge=", url_list$end_age,
"&APIKey=k94GnjflHf4dFG6HdsFe",
sep="")
return(url_list)
}
url_list <- rbind(generate_url_list(20, 29),
generate_url_list(30, 39),
generate_url_list(40, 49),
generate_url_list(50, 59),
generate_url_list(60, 110))
ndr_data <- list()
for (i in 1:nrow(url_list)) {
ndr_data[[i]] <- fromJSON(url_list[i, 5])[[2]]
ndr_data[[i]]$indicatorCode <- paste(url_list[i, 1])
ndr_data[[i]]$ageGroup <- paste(url_list[i, 3], url_list[i, 4], sep="-")
ndr_data[[i]] <- data.frame(ndr_data[[i]][[1]], ndr_data[[i]][[2]], ndr_data[[i]][[4]], ndr_data[[i]][[5]])
}
ndr_data_df <- plyr::ldply(ndr_data, rbind.fill)
colnames(ndr_data_df) <- c("CountyID", "CountyName", "UnitLevel", "UnitType", "AntalPatienter", "crepInd", "AntalRapporterade", "indicatorValue", "lnkonf",
"unkonf", "avgAge", "Oklar", "indicatorCode", "ageGroup")
county_df   <- ndr_data_df %>% filter(indicatorCode==101) %>% select(CountyID, CountyName, ageGroup, AntalPatienter)
#Joina med indicator-tabell
ndr_data_df$indicatorCode <- as.integer(as.character(ndr_data_df$indicatorCode))
ndr_data_df <- ndr_data_df %>% left_join(indikator[,c("id", "name", "unit")], by=c("indicatorCode"="id"))
#spread
ndr_data_spread <- ndr_data_df %>% select(CountyID, CountyName, ageGroup, indicatorCode, name, indicatorValue, unit) %>%
arrange(indicatorCode, CountyID)
ndr_data_indicators <- data.frame(ndr_data_spread[1:105, ], ndr_data_spread[106:210,4:7],
ndr_data_spread[211:315,4:7], ndr_data_spread[316:420,4:7], ndr_data_spread[421:525,4:7])
colnames_ind <- c(paste(unique(ndr_data_indicators$name), " (" , unique(ndr_data_indicators$unit), ")", sep=""),
paste(unique(ndr_data_indicators$name.1), " (" , unique(ndr_data_indicators$unit.1), ")", sep=""),
paste(unique(ndr_data_indicators$name.2), " (" , unique(ndr_data_indicators$unit.2), ")", sep=""),
paste(unique(ndr_data_indicators$name.3), " (" , unique(ndr_data_indicators$unit.3), ")", sep=""),
paste(unique(ndr_data_indicators$name.4), " (" , unique(ndr_data_indicators$unit.4), ")", sep=""))
colnames(ndr_data_indicators)[c(6,10,14,18,22)] <- colnames_ind
county_indicators <- ndr_data_indicators[,c(1:3,6,10,14,18,22)]
county_df <- county_df %>% left_join(county_indicators, by=c("CountyID","CountyName", "ageGroup"))
antal_patienter <- read.csv2("landsting_alder.csv", stringsAsFactors = FALSE)
colnames(antal_patienter) <- c("CountyName", "n_patienter_2013", "n_patienter_2016", "ageGroup")
county_df$ageGroup <- as.character(county_df$ageGroup)
county_df[county_df$ageGroup=="60-110", "ageGroup"] <- "60+"
#TRIM
county_df$CountyName        <- gsub("^\\s*|\\s*$", "", county_df$CountyName)
antal_patienter$CountyName  <- gsub("^\\s*|\\s*$", "", antal_patienter$CountyName)
#Join no of patients data
county_df <- county_df %>% left_join(antal_patienter, by=c("CountyName", "ageGroup")) %>% select(-AntalPatienter)
county_df <- county_df %>% mutate("patientTillväxt (%)"=(n_patienter_2016/n_patienter_2013-1)*100)
#Change county name to survey names
landst_codebook <- read.csv2("landsting_codebook.csv", stringsAsFactors = FALSE)
landst_codebook$CountyName        <- gsub("^\\s*|\\s*$", "", landst_codebook$CountyName)
county_df <- county_df %>% left_join(landst_codebook, by="CountyName")
#Output
write.csv(county_df, "county_df.csv")
View(county_df)
read.csv2("county.csv")
getwd()
read.csv2("county_df.csv")
read.csv("county_df.csv")
ndr_data <- read.csv("county_df.csv")
write.csv(county_df, "county_df.csv", row.names = FALSE)
library(jsonlite)
library(plyr)
library(dplyr)
Sys.setlocale(category = "LC_ALL", locale = "sv_SE.UTF-8")
setwd("/Users/mammarrahmani/Projects/diabetesforbund/NDR")
enheter         <- fromJSON("enhet.JSON")
landsting       <- fromJSON("landsting.JSON")
indikator       <- fromJSON("indikator.JSON")
indikator[nrow(indikator),c("id", "name")] <- c(2052, "Insulinbehandlade med CGM")
indikator$id <- as.integer(indikator$id)
#V?lj vilka indikatorer som ska exporteras
indikator_selected <- indikator %>% filter(id %in% c(201, 221, 224, 101, 2052))
url_list          <- indikator_selected %>% select(id, name)
generate_url_list <- function(a1, a2) {
url_list$start_age    <- a1
url_list$end_age      <- a2
url_list$url          <- paste("https://www.ndr.nu/IFrameKnappen/api/County/Indicator?includeNDR=true",
"&indicator=", url_list$id,
"&diabetesType=1",
"&sex=0",
"&careunitType=2",
"&fromYear=2016&fromQuartal=0&toYear=2016&toQuartal=0",
"&fromAge=", url_list$start_age,
"&toAge=", url_list$end_age,
"&APIKey=k94GnjflHf4dFG6HdsFe",
sep="")
return(url_list)
}
url_list <- rbind(generate_url_list(20, 29),
generate_url_list(30, 39),
generate_url_list(40, 49),
generate_url_list(50, 59),
generate_url_list(60, 110))
ndr_data <- list()
for (i in 1:nrow(url_list)) {
ndr_data[[i]] <- fromJSON(url_list[i, 5])[[2]]
ndr_data[[i]]$indicatorCode <- paste(url_list[i, 1])
ndr_data[[i]]$ageGroup <- paste(url_list[i, 3], url_list[i, 4], sep="-")
ndr_data[[i]] <- data.frame(ndr_data[[i]][[1]], ndr_data[[i]][[2]], ndr_data[[i]][[4]], ndr_data[[i]][[5]])
}
ndr_data_df <- plyr::ldply(ndr_data, rbind.fill)
colnames(ndr_data_df) <- c("CountyID", "CountyName", "UnitLevel", "UnitType", "AntalPatienter", "crepInd", "AntalRapporterade", "indicatorValue", "lnkonf",
"unkonf", "avgAge", "Oklar", "indicatorCode", "ageGroup")
county_df   <- ndr_data_df %>% filter(indicatorCode==101) %>% select(CountyID, CountyName, ageGroup, AntalPatienter)
#Joina med indicator-tabell
ndr_data_df$indicatorCode <- as.integer(as.character(ndr_data_df$indicatorCode))
ndr_data_df <- ndr_data_df %>% left_join(indikator[,c("id", "name", "unit")], by=c("indicatorCode"="id"))
#spread
ndr_data_spread <- ndr_data_df %>% select(CountyID, CountyName, ageGroup, indicatorCode, name, indicatorValue, unit) %>%
arrange(indicatorCode, CountyID)
ndr_data_indicators <- data.frame(ndr_data_spread[1:105, ], ndr_data_spread[106:210,4:7],
ndr_data_spread[211:315,4:7], ndr_data_spread[316:420,4:7], ndr_data_spread[421:525,4:7])
colnames_ind <- c(paste(unique(ndr_data_indicators$name), " (" , unique(ndr_data_indicators$unit), ")", sep=""),
paste(unique(ndr_data_indicators$name.1), " (" , unique(ndr_data_indicators$unit.1), ")", sep=""),
paste(unique(ndr_data_indicators$name.2), " (" , unique(ndr_data_indicators$unit.2), ")", sep=""),
paste(unique(ndr_data_indicators$name.3), " (" , unique(ndr_data_indicators$unit.3), ")", sep=""),
paste(unique(ndr_data_indicators$name.4), " (" , unique(ndr_data_indicators$unit.4), ")", sep=""))
colnames(ndr_data_indicators)[c(6,10,14,18,22)] <- colnames_ind
county_indicators <- ndr_data_indicators[,c(1:3,6,10,14,18,22)]
county_df <- county_df %>% left_join(county_indicators, by=c("CountyID","CountyName", "ageGroup"))
antal_patienter <- read.csv2("landsting_alder.csv", stringsAsFactors = FALSE)
colnames(antal_patienter) <- c("CountyName", "n_patienter_2013", "n_patienter_2016", "ageGroup")
county_df$ageGroup <- as.character(county_df$ageGroup)
county_df[county_df$ageGroup=="60-110", "ageGroup"] <- "60+"
#TRIM
county_df$CountyName        <- gsub("^\\s*|\\s*$", "", county_df$CountyName)
antal_patienter$CountyName  <- gsub("^\\s*|\\s*$", "", antal_patienter$CountyName)
#Join no of patients data
county_df <- county_df %>% left_join(antal_patienter, by=c("CountyName", "ageGroup")) %>% select(-AntalPatienter)
county_df <- county_df %>% mutate("patientTillväxt (%)"=(n_patienter_2016/n_patienter_2013-1)*100)
#Change county name to survey names
landst_codebook <- read.csv2("landsting_codebook.csv", stringsAsFactors = FALSE)
landst_codebook$CountyName        <- gsub("^\\s*|\\s*$", "", landst_codebook$CountyName)
county_df <- county_df %>% left_join(landst_codebook, by="CountyName")
#Output
write.csv(county_df, "county_df.csv", row.names = FALSE)
library(plyr)
library(dplyr)
library(tidyr)
Sys.setlocale(category = "LC_ALL", locale = "sv_SE.UTF-8")
getObjectStorageFileWithCredentials_2b960019ae7a47dd9601026211e617af <- function(container, filename) {
# This functions returns a textConnection object for a file
# from Bluemix Object Storage.
if(!require(httr)) install.packages('httr')
if(!require(RCurl)) install.packages('RCurl')
library(httr, RCurl)
auth_url <- paste("https://identity.open.softlayer.com",'/v3/auth/tokens', sep= '')
auth_args <- paste('{"auth": {"identity": {"password": {"user": {"domain": {"id": ', "a2710b40b6be4d6daa778694c1070db6",'},"password": ',
"jXusW7A{k4[bW6Bb",',"name": ', "member_6426f285b9adb2ff8fbd8dbbce62f14a7dfa3230",'}},"methods": ["password"]}}}', sep='"')
auth_response <- httr::POST(url = auth_url, body = auth_args)
x_subject_token <-  headers(auth_response)[['x-subject-token']]
auth_body <-  content(auth_response)
access_url <-  unlist(lapply(auth_body[['token']][['catalog']], function(catalog){
if((catalog[['type']] == 'object-store')){
lapply(catalog[['endpoints']], function(endpoints){
if(endpoints[['interface']] == 'public' && endpoints[['region_id']] == 'dallas') {
paste(endpoints[['url']], container, filename, sep='/')}
})
}
}))
data <- content(httr::GET(url = access_url, add_headers ("Content-Type" = "application/json", "X-Auth-Token" = x_subject_token)), as="text")
textConnection(data)
}
#Load datasets
patient_df_m   <-  read.csv(file = getObjectStorageFileWithCredentials_2b960019ae7a47dd9601026211e617af("Diabetesfrbundet", "patients_m.csv"))
getObjectStorageFileWithCredentials_2b960019ae7a47dd9601026211e617af <- function(container, filename) {
# This functions returns a textConnection object for a file
# from Bluemix Object Storage.
if(!require(httr)) install.packages('httr')
if(!require(RCurl)) install.packages('RCurl')
library(httr, RCurl)
auth_url <- paste("https://identity.open.softlayer.com",'/v3/auth/tokens', sep= '')
auth_args <- paste('{"auth": {"identity": {"password": {"user": {"domain": {"id": ', "a2710b40b6be4d6daa778694c1070db6",'},"password": ',
"jXusW7A{k4[bW6Bb",',"name": ', "member_6426f285b9adb2ff8fbd8dbbce62f14a7dfa3230",'}},"methods": ["password"]}}}', sep='"')
auth_response <- httr::POST(url = auth_url, body = auth_args)
x_subject_token <-  headers(auth_response)[['x-subject-token']]
auth_body <-  content(auth_response)
access_url <-  unlist(lapply(auth_body[['token']][['catalog']], function(catalog){
if((catalog[['type']] == 'object-store')){
lapply(catalog[['endpoints']], function(endpoints){
if(endpoints[['interface']] == 'public' && endpoints[['region_id']] == 'dallas') {
paste(endpoints[['url']], container, filename, sep='/')}
})
}
}))
data <- content(httr::GET(url = access_url, add_headers ("Content-Type" = "application/json", "X-Auth-Token" = x_subject_token)), as="text")
textConnection(data)
}
patient_df_m   <-  read.csv(file = getObjectStorageFileWithCredentials_2b960019ae7a47dd9601026211e617af("Diabetesfrbundet", "patients_m.csv"))
getwd()
patient_df <- read.csv("/Users/mammarrahmani/Projects/diabetesforbund/dashboard/patient_df.csv")
survey_data_path <- "/Users/mammarrahmani/Projects/diabetesforbund/SURVEY"
patient_df_m  <- read.csv(paste(survey_data_path, "patients_m.csv", sep=""), stringsAsFactors = FALSE)
patient_df_m  <- read.csv(paste(survey_data_path, "patients_m.csv", sep="/"), stringsAsFactors = FALSE)
patient_df_sm <- read.csv(paste(survey_data_path, "patients_sm.csv", sep="/"), stringsAsFactors = FALSE)
patient_kolumnanmn_forbund <- c("Timestamp", "Födelseår", "ArDeFickDiabetes", "Kön", "Landsting/Sjukhus",
"Landsting/Sjukhus_Saknas", "Restid", "StödUtanför", "KontaktMedDiabetiker",
"FlexibelResemöjlighet", "AndraSjukdomar", "HBAC1","LättAttKontakta", "Förtroende",
"FöljerRåd", "NöjdMedBemötande", "BemötandeVidBesök","HurInformerad", "DelaktighetIBeslut",
"ErbjudnaKontaktvägar","AnvändaKontaktvägar", "FöredragnaKontaktvägar", "VillHaCGM",
"ErbjudenCGM", "BetalatFörCGM","VillHaFGM", "ErbjudenFGM","BetalatFörFGM",
"VillHaInsulinpump", "ErbjudenInsulinpump", "BetalatFörInsulinpump",
"CGMLivskvalitet","HjälpAttTolkaCGM", "HjälpMedCGM", "FGMLivskvalitet",
"HjälpAttTolkaFGM", "HjälpMedFGM","InsulinpumpLivskvalitet", "HjälpAttTolkaInsulinpump",
"HjälpMedInsulinpump","ErbjudenStöd", "UtnyttjatStöd", "FrågatOmStöd", "BehovAvStöd",
"HarStödetPåverkatPositivt","NöjdMedStödet")
patient_kolumnanmn_socialamedier <- c("Timestamp","Födelseår", "ArDeFickDiabetes", "Kön", "Medlem", "Landsting/Sjukhus", "Landsting/Sjukhus_Saknas",
"Restid", "StödUtanför", "KontaktMedDiabetiker", "FlexibelResemöjlighet","AndraSjukdomar",
"HBAC1", "LättAttKontakta", "Förtroende", "FöljerRåd","NöjdMedBemötande", "BemötandeVidBesök",
"HurInformerad", "DelaktighetIBeslut", "ErbjudnaKontaktvägar","AnvändaKontaktvägar", "FöredragnaKontaktvägar",
"VillHaCGM","ErbjudenCGM", "BetalatFörCGM","VillHaFGM", "ErbjudenFGM","BetalatFörFGM","VillHaInsulinpump",
"ErbjudenInsulinpump", "BetalatFörInsulinpump","CGMLivskvalitet","HjälpAttTolkaCGM", "HjälpMedCGM",
"FGMLivskvalitet","HjälpAttTolkaFGM", "HjälpMedFGM","InsulinpumpLivskvalitet", "HjälpAttTolkaInsulinpump",
"HjälpMedInsulinpump","ErbjudenStöd", "UtnyttjatStöd", "FrågatOmStöd", "BehovAvStöd",
"HarStödetPåverkatPositivt","NöjdMedStödet")
colnames(patient_df_m)  <- patient_kolumnanmn_forbund
colnames(patient_df_sm) <- patient_kolumnanmn_socialamedier
patient_df_m$Medlem <- "Ja"
patient_df_m$SurveyChannel <- "Mail"
patient_df_sm$SurveyChannel <- "Sociala Medier"
patient_df <- plyr::rbind.fill(patient_df_m, patient_df_sm)
patient_df$Landsting <- sapply(as.character(patient_df$"Landsting/Sjukhus"),
function(x) strsplit(x, split = "\\-")[[1]][1])
patient_df$Sjukhus <- sapply(as.character(patient_df$"Landsting/Sjukhus"),
function(x) strsplit(x, split = "\\-")[[1]][2])
patient_df$Age <- 2017-as.integer(as.character(patient_df$Födelseår))
patient_df$AntalÅrMedDiabetes <- 2017-as.integer(as.character(patient_df$ArDeFickDiabetes))
patient_df$AgeDåDeFickDiabetes <- patient_df$Age-patient_df$AntalÅrMedDiabetes
patient_df[is.na(patient_df$Age), "Age"] <- "99"
patient_df$Age <- as.integer(patient_df$Age)
levels <- c(-Inf, 9,19,29,39,49,59,Inf)
labels <- c("0-9", "10-19", "20-29", "30-39", "40-49", "50-59", "60+")
patient_df$ageGroup <- cut(patient_df$Age, breaks=levels, labels=labels)
patient_df$HBAC1 <- as.numeric(gsub("[^0-9\\.\\,]", "", patient_df$HBAC1))
patient_df[patient_df$HBAC1 < 30 & !is.na(patient_df$HBAC1), "HBAC1"] <- round((10.93*patient_df[patient_df$HBAC1 < 30 & !is.na(patient_df$HBAC1), "HBAC1"]) - 23.50, 0)
patient_df$key_col <- paste(patient_df$Timestamp, patient_df$Födelseår, patient_df$ArDeFickDiabetes, sep="")
patient_df         <- subset(patient_df,!duplicated(patient_df$key_col)) %>% select(-key_col)
patient_df$ID      <- c(1:nrow(patient_df))
patient_df_tmp <- patient_df %>% select(ID, UtnyttjatStöd)
patient_df_tmp$split_responses <- sapply(patient_df_tmp$UtnyttjatStöd,
function(x) unlist(strsplit(as.character(x),';')))
patient_df_tmp = do.call(rbind,apply(patient_df_tmp,1,function(x) data.frame(x$ID, x$split_responses)))
patient_df_tmp$value = "Ja"
patient_df_tmp <- spread(patient_df_tmp,key=x.split_responses,value=value)
patient_df_tmp[is.na(patient_df_tmp)] <- "Nej"
colnames(patient_df_tmp) <- c("ID", "UtnyttjatKurator","UtnyttjatPsykolog","UtnyttjatEjFåttMölighet",
"UtnyttjatEjKäntBehov", "UtnyttjatBeteendevetare", "UtnyttjatAnnan" )
patient_df <- patient_df %>% left_join(patient_df_tmp, by="ID")
patient_df <- transform(patient_df,
VillHaCGMFGM=ifelse(!(patient_df$VillHaCGM %in% c("Nej", "Vet ej")) | !(patient_df$VillHaFGM %in% c("Nej", "Vet ej")),
"Ja", "Nej/Vet ej"))
patient_df <- transform(patient_df,
KontaktMedAndraDiabetiker_BIN=ifelse(patient_df$KontaktMedDiabetiker %in% c("Aldrig", "Någon gång per år"), "Aldrig",
ifelse(patient_df$KontaktMedDiabetiker=="Någon gång i månaden", "Sällan", "Ofta")))
patient_df <- read.csv("/Users/mammarrahmani/Projects/diabetesforbund/dashboard/patient_df.csv")
library(plyr)
library(dplyr)
library(tidyr)
source("/Users/mammarrahmani/Projects/diabetesforbund/transform/GetObjectStorage.R")
Sys.setlocale(category = "LC_ALL", locale = "sv_SE.UTF-8")
survey_data_path <- "/Users/mammarrahmani/Projects/diabetesforbund/SURVEY"
#Load datasets
#patient_df_m   <-  read.csv(file = getObjectStorageFileWithCredentials_2b960019ae7a47dd9601026211e617af("Diabetesfrbundet", "patients_m.csv"))
#patient_df_sm  <-  read.csv(file = getObjectStorageFileWithCredentials_2b960019ae7a47dd9601026211e617af("Diabetesfrbundet", "patients_sm.csv"))
patient_df_m  <- read.csv(paste(survey_data_path, "patients_m.csv", sep="/"), stringsAsFactors = FALSE)
patient_df_sm <- read.csv(paste(survey_data_path, "patients_sm.csv", sep="/"), stringsAsFactors = FALSE)
#Fyll i resten av namnen i rätt ordning, skriv colnames() för att få ut alla namn i rätt ordning i noteooken
patient_kolumnanmn_forbund <- c("Timestamp", "Födelseår", "ArDeFickDiabetes", "Kön", "Landsting/Sjukhus",
"Landsting/Sjukhus_Saknas", "Restid", "StödUtanför", "KontaktMedDiabetiker",
"FlexibelResemöjlighet", "AndraSjukdomar", "HBAC1","LättAttKontakta", "Förtroende",
"FöljerRåd", "NöjdMedBemötande", "BemötandeVidBesök","HurInformerad", "DelaktighetIBeslut",
"ErbjudnaKontaktvägar","AnvändaKontaktvägar", "FöredragnaKontaktvägar", "VillHaCGM",
"ErbjudenCGM", "BetalatFörCGM","VillHaFGM", "ErbjudenFGM","BetalatFörFGM",
"VillHaInsulinpump", "ErbjudenInsulinpump", "BetalatFörInsulinpump",
"CGMLivskvalitet","HjälpAttTolkaCGM", "HjälpMedCGM", "FGMLivskvalitet",
"HjälpAttTolkaFGM", "HjälpMedFGM","InsulinpumpLivskvalitet", "HjälpAttTolkaInsulinpump",
"HjälpMedInsulinpump","ErbjudenStöd", "UtnyttjatStöd", "FrågatOmStöd", "BehovAvStöd",
"HarStödetPåverkatPositivt","NöjdMedStödet")
patient_kolumnanmn_socialamedier <- c("Timestamp","Födelseår", "ArDeFickDiabetes", "Kön", "Medlem", "Landsting/Sjukhus", "Landsting/Sjukhus_Saknas",
"Restid", "StödUtanför", "KontaktMedDiabetiker", "FlexibelResemöjlighet","AndraSjukdomar",
"HBAC1", "LättAttKontakta", "Förtroende", "FöljerRåd","NöjdMedBemötande", "BemötandeVidBesök",
"HurInformerad", "DelaktighetIBeslut", "ErbjudnaKontaktvägar","AnvändaKontaktvägar", "FöredragnaKontaktvägar",
"VillHaCGM","ErbjudenCGM", "BetalatFörCGM","VillHaFGM", "ErbjudenFGM","BetalatFörFGM","VillHaInsulinpump",
"ErbjudenInsulinpump", "BetalatFörInsulinpump","CGMLivskvalitet","HjälpAttTolkaCGM", "HjälpMedCGM",
"FGMLivskvalitet","HjälpAttTolkaFGM", "HjälpMedFGM","InsulinpumpLivskvalitet", "HjälpAttTolkaInsulinpump",
"HjälpMedInsulinpump","ErbjudenStöd", "UtnyttjatStöd", "FrågatOmStöd", "BehovAvStöd",
"HarStödetPåverkatPositivt","NöjdMedStödet")
#Uppdatera Kolumnnamn
colnames(patient_df_m)  <- patient_kolumnanmn_forbund
colnames(patient_df_sm) <- patient_kolumnanmn_socialamedier
#Lägg till medlems-kolumn.
patient_df_m$Medlem <- "Ja"
#Lägg till kolumner för survey-kanal
patient_df_m$SurveyChannel <- "Mail"
patient_df_sm$SurveyChannel <- "Sociala Medier"
#Bind ihop datan
patient_df <- plyr::rbind.fill(patient_df_m, patient_df_sm)
#Skapa en kolumn för sjukhus, en för landsting
patient_df$Landsting <- sapply(as.character(patient_df$"Landsting/Sjukhus"),
function(x) strsplit(x, split = "\\-")[[1]][1])
patient_df$Sjukhus <- sapply(as.character(patient_df$"Landsting/Sjukhus"),
function(x) strsplit(x, split = "\\-")[[1]][2])
#Räkna ut åldrar
patient_df$Age <- 2017-as.integer(as.character(patient_df$Födelseår))
patient_df$AntalÅrMedDiabetes <- 2017-as.integer(as.character(patient_df$ArDeFickDiabetes))
patient_df$AgeDåDeFickDiabetes <- patient_df$Age-patient_df$AntalÅrMedDiabetes
patient_df[is.na(patient_df$Age), "Age"] <- "99"
patient_df$Age <- as.integer(patient_df$Age)
#Bin åldrar
levels <- c(-Inf, 9,19,29,39,49,59,Inf)
labels <- c("0-9", "10-19", "20-29", "30-39", "40-49", "50-59", "60+")
patient_df$ageGroup <- cut(patient_df$Age, breaks=levels, labels=labels)
#Recalculate HBA1C that have used the old system (NGSP to IFCC)
patient_df$HBAC1 <- as.numeric(gsub("[^0-9\\.\\,]", "", patient_df$HBAC1))
patient_df[patient_df$HBAC1 < 30 & !is.na(patient_df$HBAC1), "HBAC1"] <- round((10.93*patient_df[patient_df$HBAC1 < 30 & !is.na(patient_df$HBAC1), "HBAC1"]) - 23.50, 0)
#Remove timestamp duplicates in dataset
patient_df$key_col <- paste(patient_df$Timestamp, patient_df$Födelseår, patient_df$ArDeFickDiabetes, sep="")
patient_df         <- subset(patient_df,!duplicated(patient_df$key_col)) %>% select(-key_col)
patient_df$ID      <- c(1:nrow(patient_df))
#Split the multiple choice column "Utnyttjat Stöd" into several columns.
patient_df_tmp <- patient_df %>% select(ID, UtnyttjatStöd)
patient_df_tmp$split_responses <- sapply(patient_df_tmp$UtnyttjatStöd,
function(x) unlist(strsplit(as.character(x),';')))
patient_df_tmp = do.call(rbind,apply(patient_df_tmp,1,function(x) data.frame(x$ID, x$split_responses)))
patient_df_tmp$value = "Ja"
patient_df_tmp <- spread(patient_df_tmp,key=x.split_responses,value=value)
patient_df_tmp[is.na(patient_df_tmp)] <- "Nej"
colnames(patient_df_tmp) <- c("ID", "UtnyttjatKurator","UtnyttjatPsykolog","UtnyttjatEjFåttMölighet",
"UtnyttjatEjKäntBehov", "UtnyttjatBeteendevetare", "UtnyttjatAnnan" )
patient_df <- patient_df %>% left_join(patient_df_tmp, by="ID")
#Skapa en ny kolumn som säger "Ja" om vill ha FGM ELLER CGM.
patient_df <- transform(patient_df,
VillHaCGMFGM=ifelse(!(patient_df$VillHaCGM %in% c("Nej", "Vet ej")) | !(patient_df$VillHaFGM %in% c("Nej", "Vet ej")),
"Ja", "Nej/Vet ej"))
#Skapa tre nya värden för KontaktMedAndra: Ofta, Sällan, Aldrig
patient_df <- transform(patient_df,
KontaktMedAndraDiabetiker_BIN=ifelse(patient_df$KontaktMedDiabetiker %in% c("Aldrig", "Någon gång per år"), "Aldrig",
ifelse(patient_df$KontaktMedDiabetiker=="Någon gång i månaden", "Sällan", "Ofta")))
View(patient_df)
ndr_data <- read.csv("county_df.csv", stringsAsFactors = FALSE)
colnames(patient_df)
colnames(ndr_data)
patient_df <- patient_df %>% left_join(county_df, by=c("Landsting", "ageGroup"))
patient_df <- patient_df %>% left_join(ndr_data, by=c("Landsting", "ageGroup"))
View(patient_df)
View(patient_df)
write.csv(patient_df, "/Users/mammarrahmani/Projects/diabetesforbund/dashboard/patient_df.csv", row.names = FALSE)
read.csv2("/Users/mammarrahmani/Projects/diabetesforbund/dashboard/patient_df.csv", stringsAsFactors = FALSE)
patient_df_mod <- read.csv("/Users/mammarrahmani/Projects/diabetesforbund/dashboard/patient_df.csv", stringsAsFactors = FALSE)
colnames(patient_df_mod)
View(patient_df_mod)
library(rpart)
unique(patient_df_mod$VillHaCGM)
unique(patient_df_mod$ErbjudenCGM)
patient_df <- read.csv("/Users/mammarrahmani/Projects/diabetesforbund/dashboard/patient_df.csv", stringsAsFactors = FALSE)
patient_df_mod <- patient_df %>% select(Kön, Restid, StödUtanför, KontaktMedAndraDiabetiker_BIN, AndraSjukdomar, LäLättAttKontakta,
Förtroende, VillHaCGM, VillHaFGM, ErbjudenFGM, ErbjudenCGM, ErbjudenStöd, BehovAvStöd, Medlem, Lansting, ageGroup,
AntalÅrMedDiabetes, UtnyttjatKurator, UtnyttjatBeteendevetare ,UtnyttjatKurator, UtnyttjatPsykolog,
UtnyttjatEjFåttMölighet, AntalÅrMedDiabetes, AgeDåDeFickDiabetes, HbA1c..52..Andel..., HbA1c..70..Andel...,
patientTillväxt....)
colnames(patient_df_mod)
patient_df_mod <- patient_df %>% select(Kön, Restid, StödUtanför, KontaktMedAndraDiabetiker_BIN, AndraSjukdomar, LättAttKontakta,
Förtroende, VillHaCGM, VillHaFGM, ErbjudenFGM, ErbjudenCGM, ErbjudenStöd, BehovAvStöd, Medlem, Lansting, ageGroup,
AntalÅrMedDiabetes, UtnyttjatKurator, UtnyttjatBeteendevetare ,UtnyttjatKurator, UtnyttjatPsykolog,
UtnyttjatEjFåttMölighet, AntalÅrMedDiabetes, AgeDåDeFickDiabetes, HbA1c..52..Andel..., HbA1c..70..Andel...,
patientTillväxt....)
patient_df_mod <- patient_df %>% select(Kön, Restid, StödUtanför, KontaktMedAndraDiabetiker_BIN, AndraSjukdomar, LättAttKontakta,
Förtroende, VillHaCGM, VillHaFGM, ErbjudenFGM, ErbjudenCGM, ErbjudenStöd, BehovAvStöd, Medlem, Landsting, ageGroup,
AntalÅrMedDiabetes, UtnyttjatKurator, UtnyttjatBeteendevetare ,UtnyttjatKurator, UtnyttjatPsykolog,
UtnyttjatEjFåttMölighet, AntalÅrMedDiabetes, AgeDåDeFickDiabetes, HbA1c..52..Andel..., HbA1c..70..Andel...,
patientTillväxt....)
View(patient_df_mod)
patient_df_mod <- patient_df %>% select(Kön, Restid, StödUtanför, KontaktMedAndraDiabetiker_BIN, AndraSjukdomar, LättAttKontakta,
Förtroende, VillHaCGM, VillHaFGM, ErbjudenFGM, ErbjudenCGM, ErbjudenStöd, BehovAvStöd, Medlem, Landsting, ageGroup,
AntalÅrMedDiabetes, UtnyttjatKurator, UtnyttjatBeteendevetare ,UtnyttjatKurator, UtnyttjatPsykolog,
UtnyttjatEjFåttMölighet, AntalÅrMedDiabetes, AgeDåDeFickDiabetes, HbA1c..52..Andel..., HbA1c..70..Andel...,
patientTillväxt...., Förtroende)
fortroende_labels <- c("Ej Förtroende," "Förtroende")
fortroende_levels <- c(-Inf,3,Inf)
fortroende_labels <- c("Ej Förtroende", "Förtroende")
fortroende_levels <- c(-Inf,3,Inf)
cut(patient_df$Förtroende, breaks=levels, labels=labels)
Förtroende, Bemötande Vid Besök, HBAC1
cut(patient_df$"Förtroende", breaks=levels, labels=labels)
cut(patient_df$"Förtroende", breaks=fortroende_levels, labels=fortroende_labels)
head(cut(patient_df$"Förtroende", breaks=fortroende_levels, labels=fortroende_labels))
head(patient_df$"Förtroende")
patient_df_mod <- patient_df %>% select(Kön, Restid, StödUtanför, KontaktMedAndraDiabetiker_BIN, AndraSjukdomar, LättAttKontakta,
Förtroende, VillHaCGM, VillHaFGM, ErbjudenFGM, ErbjudenCGM, ErbjudenStöd, BehovAvStöd, Medlem, Landsting, ageGroup,
AntalÅrMedDiabetes, UtnyttjatKurator, UtnyttjatBeteendevetare ,UtnyttjatKurator, UtnyttjatPsykolog,
UtnyttjatEjFåttMölighet, AntalÅrMedDiabetes, AgeDåDeFickDiabetes, HbA1c..52..Andel..., HbA1c..70..Andel...,
patientTillväxt....)
patient_df_mod$"Fortroende" <- cut(patient_df$"Förtroende", breaks=fortroende_levels, labels=fortroende_labels)
View(patient_df_mod)
install.packages("fselector")
install.packages("Fselector")
install.packages("FSelector")
formula_tree <- paste(names(patient_df_mod)[1:(length(patient_df_mod)-1)], collapse='+')
formula_tree <- paste("Fortroende ~ ", formula_tree)
formula_tree
tree_mod <- rpart(formula_tree, data=patient_df_mod, method="class")
printcp(tree_mod)
library(plyr)
library(dplyr)
library(tidyr)
library(rpart)
#install.packages("FSelector")
patient_df <- read.csv("/Users/mammarrahmani/Projects/diabetesforbund/dashboard/patient_df.csv", stringsAsFactors = FALSE)
patient_df_mod <- patient_df %>% select(Kön, Restid, StödUtanför, KontaktMedAndraDiabetiker_BIN, AndraSjukdomar, LättAttKontakta,
Förtroende, VillHaCGM, VillHaFGM, ErbjudenFGM, ErbjudenCGM, ErbjudenStöd, BehovAvStöd, Medlem, Landsting, ageGroup,
AntalÅrMedDiabetes, UtnyttjatKurator, UtnyttjatBeteendevetare ,UtnyttjatKurator, UtnyttjatPsykolog,
UtnyttjatEjFåttMölighet, AntalÅrMedDiabetes, AgeDåDeFickDiabetes, HbA1c..52..Andel..., HbA1c..70..Andel...,
patientTillväxt....)
fortroende_labels <- c("Ej Förtroende", "Förtroende")
fortroende_levels <- c(-Inf,3,Inf)
patient_df_mod$"Fortroende" <- cut(patient_df$"Förtroende", breaks=fortroende_levels, labels=fortroende_labels)
formula_tree <- paste(names(patient_df_mod)[1:(length(patient_df_mod)-1)], collapse='+')
formula_tree <- paste("Fortroende ~ ", formula_tree)
tree_mod <- rpart(formula_tree, data=patient_df_mod, method="class")
printcp(tree_mod)
text(tree_mod, use.n=TRUE, all=TRUE, cex=.8)
plot(tree_mod, uniform=TRUE,
main="Classification Tree for Kyphosis")
patient_df_mod <- patient_df %>% select(Kön, Restid, StödUtanför, KontaktMedAndraDiabetiker_BIN, AndraSjukdomar, LättAttKontakta,
VillHaCGM, VillHaFGM, ErbjudenFGM, ErbjudenCGM, ErbjudenStöd, BehovAvStöd, Medlem, Landsting, ageGroup,
AntalÅrMedDiabetes, UtnyttjatKurator, UtnyttjatBeteendevetare ,UtnyttjatKurator, UtnyttjatPsykolog,
UtnyttjatEjFåttMölighet, AntalÅrMedDiabetes, AgeDåDeFickDiabetes, HbA1c..52..Andel..., HbA1c..70..Andel...,
patientTillväxt....)
fortroende_labels <- c("Ej Förtroende", "Förtroende")
fortroende_levels <- c(-Inf,3,Inf)
patient_df_mod$"Fortroende" <- cut(patient_df$"Förtroende", breaks=fortroende_levels, labels=fortroende_labels)
formula_tree <- paste(names(patient_df_mod)[1:(length(patient_df_mod)-1)], collapse='+')
formula_tree <- paste("Fortroende ~ ", formula_tree)
tree_mod <- rpart(formula_tree, data=patient_df_mod, method="class")
printcp(tree_mod)
plot(tree_mod, uniform=TRUE,
main="Classification Tree for Kyphosis")
text(tree_mod, use.n=TRUE, all=TRUE, cex=.8)
plot(tree_mod, uniform=TRUE,
main="Classification Tree Förtroende/Ej Förtroende")
text(tree_mod, use.n=TRUE, all=TRUE, cex=.8)
plot(tree_mod, uniform=TRUE,
main="Classification Tree Förtroende/Ej Förtroende", type=3)
rpart.plot(tree_mod, uniform=TRUE,
main="Classification Tree Förtroende/Ej Förtroende", type=3)
library(rpart.plot)
install.packages(rpart.plot)
install.packages("rpart.plot")
library(rpart.plot)
rpart.plot(tree_mod, type=3)
rpart.plot(tree_mod, type=3, digits=3)
rpart.plot(tree_mod, type=3, digits=3, fallen.leaves = TRUE)
plot(tree_mod, uniform=TRUE,
main="Classification Tree Förtroende/Ej Förtroende")
text(tree_mod, use.n=TRUE, all=TRUE, cex=.8)
